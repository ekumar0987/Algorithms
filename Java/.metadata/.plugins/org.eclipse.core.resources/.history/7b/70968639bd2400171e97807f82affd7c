import java.util.*;
/*
 * Set of stacks implementation. When a stack gets full, create a new stack and push to that. If a stack is empty after popping an element, remove the stack from
 * the set of stacks
 */
public class SetOfStacks {
	
	ArrayList<ArrayList<Integer>> sos;
	int currentstack;
	int stacktop;
	static final int stacksize = 5;
	
	public SetOfStacks(){
		sos = new ArrayList<ArrayList<Integer>>();
		currentstack = 0;
		stacktop = -1;
	}
	
	public void push(int item){
		ArrayList<Integer> s = sos.get(currentstack);
		
		//Stack is full? Create a new stack and add items there
		if(s.size() == stacksize){
			ArrayList<Integer> newstack = new ArrayList<Integer>();
			stacktop++;
			newstack.add(item);
			sos.add(newstack);
			currentstack++;
		}
		//Add item to existing stack
		else{
			stacktop++;
			s.add(item);
		}
	}
	
	public int pop(){
		if(sos.size() == 0){
			System.out.println("Set of Stacks Empty!");
			return -1;
		}	
		
		ArrayList<Integer> s = sos.get(currentstack);
		int result = s.remove(stacktop);
		stacktop--;
		//Stack empty? Remove from set of stacks
		if(s.size() == 0){
			sos.remove(currentstack);
			currentstack--;
		}
		
	return result;
		
	}
	
	public static void main(String[] args) {
		

	}

}
