/*
 * Compute all permutations of a string of unique characters
 * Time complexity: n!
 */
import java.util.*;
public class PermutationsOfStringChars {

	public void perms(String prefix, String str){
		
		if(str.length() == 0)
			System.out.println(prefix);
		else{
			for(int i = 0; i < str.length(); i++){
				perms(prefix + str.charAt(i), str.substring(0, i) + str.substring(i+1));
			}
		}
	}
	
	public ArrayList<String> getPerms(String str){
		
		ArrayList<String> perms = new ArrayList<String>();
		if(str == null || str.length() == 0){
			perms.add("");
			return perms;
		}
		
		
		
		
		
	}
	
	public static void main(String[] args) {
		PermutationsOfStringChars p = new PermutationsOfStringChars();
		p.perms("", "abc");
	}
}
